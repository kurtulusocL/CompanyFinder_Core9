@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@model IPagedList<Hit>
@{
	ViewData["Title"] = "Blog Makalelerinizi Görüntüleyenler";
	ViewData["Subtitle"] = "Blog Makalelerinizi Görüntüleyen Kullanıcıların Listesi";
	Layout = "~/Views/Shared/_companyUserLayout.cshtml";
}

<section id="inner-banner" class="index-2">
	<div class="container">
		<div class="col-lg-12 col-md-12 col-xs-12">
			<div class="inner-heading">
				<h2>@ViewData["Title"]</h2>
				<div class="separator left-align">
					<ul>
						<li></li>
						<li></li>
						<li></li>
					</ul>
				</div>
				<nav aria-label="breadcrumb">
					<ol class="breadcrumb">
						<li class="breadcrumb-item active" aria-current="page">@ViewData["Subtitle"]</li>
					</ol>
				</nav>
			</div>
		</div>
	</div>
</section>
<section id="our_team" class="inner index-2">
	<div id="web-developer" class="gray-bg index-2">
		<div class="container">
			<div class="section_heading">
				<h2>@ViewData["Title"]</h2>
				<div class="separator">
					<ul>
						<li></li>
						<li></li>
						<li></li>
					</ul>
				</div>
			</div>
			<div class="col-lg-12 col-md-12 col-xs-12 content_sec">
				<div class="row">
					@foreach (var item in Model)
					{
						<div class="col-lg-3 col-md-3 col-sm-12 col-xs-12">
							<div class="item">
								<div class="team-card">
									@if (item.UserId != null)
									{
										<div class="name_designation">
											<h5>
												Görüntüleyen: @item.User.NameSurname, @await Component.InvokeAsync("GetCompanyInformation", new { id = item.UserId })
											</h5>
										</div>
										<div class="description">
											<p>
												Lokasyon: @item.User.City, @item.User.Country
											</p>
										</div>
										<div class="description">
											<p>
												@item.CreatedDate.ToLongDateString()
											</p>
										</div>
									}
								</div>
							</div>
						</div>
					}
				</div>
				<div class="pagination">
					<div class="pagination-info">
						@Html.PagedListPager(Model, page => Url.Action("HitBlogUserList", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
					</div>
				</div>
			</div>
		</div>
	</div>
</section>