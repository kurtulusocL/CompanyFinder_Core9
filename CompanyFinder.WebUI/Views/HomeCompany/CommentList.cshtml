@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@model IPagedList<Comment>
@{
	ViewData["Title"] = "Yorum / Yorum Cevabı Listesi";
	ViewData["Subtitle"] = "Yaptığınız Yorumlar ve Onlara Gelen Cevapların Listesi";
	Layout = "~/Views/Shared/_companyUserLayout.cshtml";
}

<section id="inner-banner">
	<div class="container">
		<div class="row">
			<div class="inner-heading">
				<h2>@ViewData["Title"]</h2>
				<nav aria-label="breadcrumb">
					<ol class="breadcrumb">
						<li class="breadcrumb-item active" aria-current="page">@ViewData["Subtitle"]</li>
					</ol>
				</nav>
			</div>
		</div>
	</div>
</section>
<section id="single-post-detail">
	<div class="container">
		<div class="col-lg-12 col-md-12 col-xs-12">
			<div class="row">
				<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 blog-detail">
					<div class="comments">
						<h5><span> Yaptığınız Yorumlar ve Cevapları </span></h5>
						<div class="">
							<ul>
								<li></li>
								<li></li>
								<li></li>
							</ul>
						</div>
						<div class="clearfix"></div>
						<ol class="comments-list">
							@foreach (var item in Model)
							{
								<li class="comment-item">
									<div class="comment">
										<div class="visitor_pic">
											@if (item.UserId != null)
											{
												@await Component.InvokeAsync("CompanyUserProfileLogo", new { id = item.UserId })
											}
										</div>
										<div class="visitor_description">
											<div class="name_date">
												<div class="date">@item.CreatedDate.ToShortDateString()</div>
											</div>
											@if (item.Subject != null)
											{
												<p>Yorum Konusu: @item.Subject</p>
											}
											<p>Yorum: @item.Text</p>
										</div>
										<div class="about-author">
											<div class="name_designation">
												@if (item.UserId != null)
												{
													<h6>
														<span class="badge badge-info">Yorumu Yapan:</span>
														<br />
														@item.User.NameSurname, @item.User.Email
													</h6>
												}
											</div>
										</div>
									</div>
									<ol class="comments-list reply">
										@await Component.InvokeAsync("CompanyUserCommentAnswer", new { id = item.Id })
									</ol>
								</li>
							}
						</ol>
					</div>
				</div>
			</div>
			<div class="pagination">
				<div class="pagination-info">
					@Html.PagedListPager(Model, page => Url.Action("CommentList", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
				</div>
			</div>
		</div>
	</div>
</section>