@model User
@{
	ViewData["Title"] = "Delete User";
	ViewData["Subtitle"] = "User Navigator";
	Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<div class="wrapper-pro">
	<div class="breadcome-area mg-b-30 small-dn">
		<div class="container-fluid">
			<div class="row">
				<div class="col-lg-12">
					<div class="breadcome-list map-mg-t-40-gl shadow-reset">
						<div class="row">
							<div class="col-lg-3 col-md-3 col-sm-3 col-xs-3">
								<div class="breadcome-heading">
									@ViewData["Subtitle"]
								</div>
							</div>
							<div class="col-lg-9 col-md-9 col-sm-9 col-xs-9">
								<ul class="breadcome-menu">
									<li>
										<a asp-controller="User" asp-action="kurtulusocL">User Home</a> <span class="bread-slash">/</span>
									</li>
									<li>
										<a asp-controller="User" asp-action="Admin">Admins</a> <span class="bread-slash">/</span>
									</li>
									<li>
										<a asp-controller="User" asp-action="SuspendedAdmin">Suspended Admins</a> <span class="bread-slash">/</span>
									</li>
									<li>
										<a asp-controller="User" asp-action="DeletedAdmin">Deleted Admins</a> <span class="bread-slash">/</span>
									</li>
									<li>
										<a asp-controller="User" asp-action="Company">Companies</a> <span class="bread-slash">/</span>
									</li>
									<li>
										<a asp-controller="User" asp-action="SuspendedCompany">Suspended Companies</a> <span class="bread-slash">/</span>
									</li>
									<li>
										<a asp-controller="User" asp-action="DeletedCompany">Deleted Companies</a> <span class="bread-slash">/</span>
									</li>
									<li>
										<a asp-controller="User" asp-action="UserOps">User Ops</a> <span class="bread-slash">/</span>
									</li>
								</ul>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="widgets-personal-info-area">
		<div class="container-fluid">
			<div class="row">
				<div class="col-lg-12">
					<div class="author-widgets-single widget-ov-mg-t-30 widget-ov-mg-t-n-30 widget-ov-mg-t-l-30 shadow-reset">
						<div class="perso-img">
							@if (Model.Title == "Company")
							{
								@await Component.InvokeAsync("CompanyLogoForUserList", new { id = Model.Id })
							}
							else
							{
								@await Component.InvokeAsync("UserTableProfileImage", new { id = Model.Id })
							}
						</div>
						<div class="persoanl-widget-hd persoanl1-widget-hd">
							<h2>Name Surname: @Model.NameSurname</h2>
							<h2>Email: @Model.Email</h2>
						</div>
						<div class="social-widget-result social-widget1-result">
							<p>Username: @Model.UserName</p>
							<p>
								@if (Model.Title != null)
								{
									<span>Title: @Model.Title</span>
								}
								else
								{
									<strong style="color:darkred">No Title</strong>
								}
							</p>
							<p>
								@if (Model.Gender != null)
								{
									<span>Gender: @Model.Gender</span>
								}
								else
								{
									<strong style="color:darkred">No Gender</strong>
								}
							</p>
							<p>Phone Number: @Model.PhoneNumber</p>
						</div>
						<div class="social-widget-result social-widget1-result">
							<span>Created At: @Model.CreatedDate.ToShortDateString()</span>
							@if (Model.Title == "User")
							{
								<span>
									Foundation Date: @Model.Birthdate.ToShortDateString()
								</span>
							}
							else
							{
								<span>
									Birthdate Date: @Model.Birthdate.ToShortDateString()
								</span>
							}
						</div>
						<div class="widget-text-box">
							<h4>
								Normalized Username: @Model.NormalizedUserName
								Normalized Email: @Model.NormalizedEmail
							</h4>
							<h4>
								Location: @Model.City, @Model.Country
							</h4>
							<p>
								<ul>
									<li>Appointments: @Model.Appointments.Count()</li>
									<li>Blogs: @Model.Blogs.Count()</li>
									<li>Cancel Memberships: @Model.CancelMemberships.Count()</li>
									<li>Companies: @Model.Companies.Count()</li>
									<li>Company Messages: @Model.CompanyMessages.Count()</li>
									<li>Comments: @Model.Comments.Count()</li>
									<li>Comment Answers: @Model.CommentAnswers.Count()</li>
									<li>Hits: @Model.Hits.Count()</li>
									<li>Likes: @Model.Likes.Count()</li>
									<li>Products: @Model.Products.Count()</li>
									<li>Profile Images: @Model.ProfileImages.Count()</li>
									<li>Questions: @Model.Questions.Count()</li>
									<li>Question Answers: @Model.QuestionAnswers.Count()</li>
									<li>Reports: @Model.Reports.Count()</li>
									<li>Saved Contents: @Model.SavedContents.Count()</li>
									<li>Tasks: @Model.ToDos.Count()</li>
									<li>Logins: @Model.UserSessions.Count()</li>
								</ul>
							</p>
							@if (Model.UpdatedDate != null)
							{
								<p>Updated At: @Model.UpdatedDate.Value.ToShortDateString()</p>
							}
							@if (Model.IsActive == true)
							{
								<p>Active</p>
							}
							else
							{
								<p>DeActive</p>
							}
							@if (Model.IsDeleted == true)
							{
								<p>Deleted</p>
							}
							else
							{
								<p>Not Deleted</p>
							}
							
							<div class="like-love-list">
								<a asp-controller="User" asp-action="DeleteUser" asp-route-id="@Model.Id" class="btn btn-custon-rounded-two btn-danger btn-sm">Delete User</a>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>